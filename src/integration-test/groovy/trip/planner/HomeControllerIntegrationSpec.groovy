package trip.planner

import grails.test.mixin.TestFor
import grails.test.mixin.integration.Integration
import grails.transaction.Rollback
import grails.util.GrailsWebMockUtil
import org.apache.http.HttpStatus
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.web.context.WebApplicationContext
import org.springframework.web.context.request.RequestContextHolder
import spock.lang.Specification

@TestFor(HomeController)
@Integration
@Rollback
class HomeControllerIntegrationSpec extends Specification {

    private static final String LEIPZIG = "Leipzig"
    private static final String TAUCHA = "Taucha"
    private static final String NOT_EXISTING_CITY_1 = "not-existing-15451245"
    private static final String NOT_EXISTING_CITY_2 = "not-existing-10092454"
    private static final String LANG_DE = "de"

    @Autowired
    WebApplicationContext ctx

    def setup() {
        GrailsWebMockUtil.bindMockWebRequest(ctx)
    }

    def cleanup() {
        RequestContextHolder.resetRequestAttributes()
    }

    void "test get route returns OK"() {
        when:
        controller.getRoute(LEIPZIG, TAUCHA, 0, LANG_DE)

        def response = controller.response

        then:
        response.status == HttpStatus.SC_OK
    }

    void "test get route contains route"() {
        when:
        controller.getRoute(LEIPZIG, TAUCHA, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().contains('{"success":true,"route":[["12.380986","51.3390864"],["12.3807372","51.3391558"],["12.3803117","51.3393106"],["12.3802795","51.3393246"],["12.3801363","51.3392121"],["12.3801143","51.3392017"],["12.380256","51.3391113"],["12.3811803","51.3388573"],["12.3815647","51.3387356"],["12.3817301","51.3387055"],["12.3820649","51.3386326"],["12.3827293","51.3384493"],["12.3831932","51.3383482"],["12.3843211","51.3381634"],["12.3846968","51.3381232"],["12.3848681","51.3381176"],["12.3848976","51.3382348"],["12.3849246","51.3383346"],["12.3842359","51.3383827"],["12.383579","51.338476"],["12.382359","51.3387323"],["12.3821198","51.338806"],["12.3821742","51.3389359"],["12.3824784","51.339669"],["12.3825897","51.3399497"],["12.3827293","51.3404858"],["12.3828172","51.3410028"],["12.3828313","51.3412113"],["12.3829083","51.3421908"],["12.383307","51.3429351"],["12.3833966","51.3431166"],["12.3834158","51.3431624"],["12.3835289","51.3434887"],["12.3836604","51.3437482"],["12.3837062","51.3437998"],["12.383826","51.3438611"],["12.3847867","51.3442045"],["12.3849913","51.3443239"],["12.3852123","51.3444634"],["12.3859354","51.3451282"],["12.3862184","51.3453244"],["12.3863826","51.3454151"],["12.386624","51.3455192"],["12.3878677","51.3459672"],["12.3881214","51.3460798"],["12.3883546","51.346254"],["12.3886012","51.3463861"],["12.3887972","51.3464364"],["12.3889956","51.3464563"],["12.38999","51.3464568"],["12.3908202","51.3464399"],["12.3919739","51.3463008"],["12.3921606","51.3462832"],["12.3934015","51.346202"],["12.3940277","51.3461465"],["12.3942469","51.3461531"],["12.4045367","51.3456032"],["12.4059402","51.3455272"],["12.4060418","51.3462568"],["12.4061854","51.3476113"],["12.4060891","51.3487082"],["12.4061205","51.3488449"],["12.4058844","51.3504414"],["12.4058657","51.3506728"],["12.4060501","51.3507892"],["12.4074195","51.3512243"],["12.4076287","51.3512928"],["12.4077938","51.3513714"],["12.4101023","51.3528575"],["12.4116276","51.353826"],["12.4120367","51.3540693"],["12.4142592","51.3555216"],["12.4153054","51.3561713"],["12.4161164","51.3566997"],["12.4161572","51.3567455"],["12.4164333","51.3567388"],["12.4169485","51.3567942"],["12.4172742","51.3568662"],["12.417625","51.3569692"],["12.4185381","51.3572995"],["12.4177975","51.358402"],["12.4175918","51.3586633"],["12.4176097","51.3590187"],["12.4175902","51.359102"],["12.4175002","51.3592134"],["12.4176172","51.3592996"],["12.4177982","51.3595542"],["12.4178658","51.3598889"],["12.4178826","51.3599221"],["12.41865","51.3603827"],["12.4194999","51.3608624"],["12.4196515","51.3610103"],["12.4202819","51.3619678"],["12.4208965","51.3629949"],["12.4216079","51.3643189"],["12.4224245","51.3656967"],["12.4229283","51.3666898"],["12.4232366","51.3672335"],["12.4234389","51.3674612"],["12.4248433","51.3688833"],["12.4249618","51.3690051"],["12.4253769","51.3689395"],["12.4260594","51.3688917"],["12.4270116","51.3688516"],["12.4287828","51.3688654"],["12.4312588","51.3688462"],["12.4341656","51.3688602"],["12.4352992","51.3688643"],["12.4353011","51.3690807"],["12.4353015","51.3691115"],["12.4352996","51.3689254"],["12.4352992","51.3688643"],["12.4375408","51.368862"],["12.4379554","51.3688503"],["12.4380861","51.3687969"],["12.4381804","51.3687337"],["12.4382353","51.3686305"],["12.4382586","51.3662078"],["12.4382441","51.3658038"],["12.4382327","51.3656888"],["12.4388014","51.3657132"],["12.4390732","51.3657736"],["12.4406929","51.3667625"],["12.4411602","51.3669698"],["12.4414393","51.3670165"],["12.4418263","51.3671331"],["12.4420646","51.3672382"],["12.4422754","51.3673395"],["12.4427461","51.3671559"],["12.4434906","51.3669905"],["12.4441187","51.3668835"],["12.4443562","51.3668193"],["12.4498987","51.3643869"],["12.4513582","51.3637103"],["12.4515182","51.363631"],["12.4529642","51.364331"],["12.4540855","51.3647856"],["12.4556511","51.3653487"],["12.4567415","51.3657194"],["12.459671","51.3668007"],["12.4634611","51.3681518"],["12.4646322","51.368594"],["12.4657516","51.3689919"],["12.466099","51.3691327"],["12.4663246","51.3692048"],["12.4685443","51.3700106"],["12.4695281","51.3703306"],["12.4700055","51.3705071"],["12.470222","51.3706135"],["12.4705684","51.3707491"],["12.4711144","51.3709378"],["12.4719706","51.3712585"],["12.4733861","51.3717991"],["12.4738245","51.3719805"],["12.4739963","51.3720844"],["12.4755844","51.372687"],["12.4775435","51.3733993"],["12.4817475","51.3748925"],["12.4826915","51.3752582"],["12.4847169","51.3759967"],["12.4868299","51.3767416"],["12.4887767","51.3774634"],["12.4891342","51.3776461"],["12.4922085","51.3795253"],["12.4923362","51.3795836"],["12.4927538","51.3797235"],["12.4933963","51.3798977"],["12.4935864","51.3799399"],["12.4936554","51.3799578"]]')
    }

    void "test get route starts with success true"() {
        when:
        controller.getRoute(LEIPZIG, TAUCHA, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().startsWith('{"success":true,')
    }

    void "test get route contains start coordinates"() {
        when:
        controller.getRoute(LEIPZIG, TAUCHA, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().contains('"startCoordinates":[51.3391827,12.3810549]')
    }

    void "test get route with not existing start place"() {
        when:
        controller.getRoute(NOT_EXISTING_CITY_1, LEIPZIG, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().equals('{"success":false,"error":"Error: Unable to find \'' + NOT_EXISTING_CITY_1
                + '\'!"}')
    }

    void "test get route with not existing destination place"() {
        when:
        controller.getRoute(LEIPZIG, NOT_EXISTING_CITY_1, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().equals('{"success":false,"error":"Error: Unable to find \'' + NOT_EXISTING_CITY_1
                + '\'!"}')
    }

    void "test get route with not existing start and destination place"() {
        when:
        controller.getRoute(NOT_EXISTING_CITY_1, NOT_EXISTING_CITY_2, 0, LANG_DE)

        def response = controller.response

        then:
        response.content.toString().equals('{"success":false,"error":"Error: Unable to find \'' + NOT_EXISTING_CITY_1
                + '\' and \'' + NOT_EXISTING_CITY_2 + '\'!"}')
    }
}
